// @ts-check
const fs = require('fs')
const path = require('path')

/**
 * fetch `diagnosticMessages.json` from TS repo and format json.
 * 
 * link: https://github.com/microsoft/TypeScript/blob/fcd55c21a1bf4670080630d3a6c00231e0d626a0/src/compiler/diagnosticMessages.json
 * 
 * 
 */

async function main() {
  /** @type { { [msg: string]: { category: string; code: number } } }  */
  const json = await fetchJSON()
  const byCode = Object.entries(json).reduce((acc, ac) => {
    const [key, val] = ac
    acc[val.code] = { ...val, message: key }
    return acc
  }, {})

  let outputs = ['// THIS FILE IS GENERATED BY CODE GENERATOR. DO NOT CHANGE MANUALLY.', '']
  outputs.push('export const data = ' + JSON.stringify(byCode, null, '\t'))

  const output = outputs.join('\n')

  const outputPath = path.resolve(__dirname, '../src/gen/diagnosticsMap.ts')
  fs.writeFileSync(outputPath, output)
}

async function fetchJSON() {
  // need some tricks to fetch large JSON object
  // TODO: return remote json file
  return JSON.parse(fs.readFileSync(path.resolve(__dirname, 'data.json'), 'utf-8'))
}

main()
